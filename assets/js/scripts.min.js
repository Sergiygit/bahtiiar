"use strict";

$(document).ready(function () {
  window.saws = {};

  if ($("body").hasClass("index")) {
    window.saws.mainslider = {
      initialize: function () {
        var iScrollPos = 0;

        var firstScreen = new Swiper(".main-swiper", {
          speed: 1000,
          direction: "vertical",
          slidesPerView: 1,
          spaceBetween: 0,
          mousewheel: true,
          mousewheel: {
            releaseOnEdges: true,
          },
          pagination: {
            el: ".main-swiper-pagination",
            clickable: true,
            renderBullet: function (index, className) {
              return (
                '<span class="' +
                className +
                '">' +
                "0" +
                +(index + 1) +
                "</span>"
              );
            },
          },
          allowTouchMove: false,
        });

        firstScreen.on("slideChangeTransitionStart", function () {
          setTimeout(function () {
            if (
              $(".js-data-slide.swiper-slide-active").data("slide-numb") === 1
            ) {
              $(".burger").hide();
              $(".burger").removeClass("is-active");
              $(".nav.fixed").hide();
            } else $(".burger").show();
          }, 1000);

          if (
            $(".js-data-slide.swiper-slide-active").data("slide-numb") === 4
          ) {
            window.saws.numbers.init();
          }
          if (
            $(".js-data-slide.swiper-slide-active").data("slide-numb") === 5
          ) {
            $(".fifth-screen__icons span").css("opacity", "1");
          }
        });
        $(".scrollbtn").click(function () {
          firstScreen.slideNext();
        });
        $(".nav__list li a").click(function () {
          var t = $(this).data("nav-numb");
          firstScreen.slideTo(t);
        });
        $(".header__btn").click(function () {
          firstScreen.slideTo(10, 500, false);
        });
      },
    };

    window.saws.conditionslider = {
      initialize: function () {
        var conditionsScreen = new Swiper(".conditions-swiper", {
          speed: 1500,
          direction: "vertical",
          slidesPerView: 1,
          autoHeight: true,
          mousewheel: false,
          pagination: false,
          allowTouchMove: false,
          navigation: {
            nextEl: ".conditions-swiper .swiper-button-next",
            prevEl: ".conditions-swiper .swiper-button-prev",
          },
          spaceBetween: 45,
          breakpoints: {
            1023: {
              direction: "horizontal",
              spaceBetween: 130,
              centeredSlides: true,
            },
          },
        });
      },
    };

    window.saws.stepslider = {
      initialize: function () {
        var stepsScreen = new Swiper(".steps-swiper", {
          speed: 500,
          direction: "vertical",
          slidesPerView: 1,
          mousewheel: false,
          allowTouchMove: false,
          navigation: {
            nextEl: ".steps-swiper .swiper-button-next",
            prevEl: ".steps-swiper .swiper-button-prev",
          },
          spaceBetween: 100,
        });
      },
    };

    window.saws.sliders = {
      initialize: function () {
        var iScrollPos = 0;

        var reviews = new Swiper(".reviews__slider", {
          speed: 800,
          direction: "horizontal",
          slidesPerView: 1,
          mousewheel: false,
          centeredSlides: true,
          pagination: false,
          allowTouchMove: false,
          navigation: {
            nextEl: ".reviews__slider .swiper-button-next",
            prevEl: ".reviews__slider .swiper-button-prev",
          },
          breakpoints: {
            767: {
              spaceBetween: 45,
            },
            1660: {
              spaceBetween: 25,
            },
          },
        });

        var questionsScreen = new Swiper(".questions-swiper", {
          speed: 800,
          direction: "horizontal",
          slidesPerView: 1,
          mousewheel: false,
          allowTouchMove: false,
          navigation: {
            nextEl: ".questions-swiper .swiper-button-next",
            prevEl: ".questions-swiper .swiper-button-prev",
          },
          pagination: {
            el: ".questions-swiper-pagination",
            type: "bullets",
          },
          spaceBetween: 45,
          breakpoints: {
            1023: {
              direction: "horizontal",
              spaceBetween: 130,
              centeredSlides: true,
            },
          },
        });

        var historyScreen = new Swiper(".third-screen__swiper", {
          speed: 1500,
          slidesPerView: 2.5,
          mousewheel: false,
          centeredSlides: true,
          allowTouchMove: false,
          spaceBetween: 85,
          direction: "vertical",
          navigation: true,
          navigation: {
            nextEl: ".third-screen__swiper .swiper-button-next",
            prevEl: ".third-screen__swiper .swiper-button-prev",
          },

          breakpoints: {
            767: {
              direction: "horizontal",
              slidesPerView: 1,
              autoHeight: true,
              spaceBetween: 85,
              pagination: {
                el: ".third-screen__swiper .swiper-pagination",
                type: "bullets",
                renderBullet: function (index, className) {
                  return (
                    '<span class="' + className + '">' + (index + 1) + "</span>"
                  );
                },
              },
            },
            1366: {
              slidesPerView: 2.2,
              spaceBetween: 85,
            },
          },
        });

        var reviews = new Swiper(".gallery-screen__swiper", {
          speed: 800,
          direction: "horizontal",
          slidesPerView: 4,
          slidesPerColumn: 2,
          mousewheel: false,
          pagination: false,
          autoheight: true,
          allowTouchMove: false,
          spaceBetween: 25,
          navigation: {
            nextEl: ".swiper-button-next",
            prevEl: ".swiper-button-prev",
          },
          breakpoints: {
            650: {
              slidesPerView: 1,
              slidesPerColumn: 1,
            },
            900: {
              slidesPerView: 2,
            },
            1023: {
              slidesPerView: 3,
            },
          },
        });
      },
    }.initialize();

    window.saws.slidersInit = {
      init: function () {
        $(window)
          .resize(function () {
            if ($(".main-swiper").length) {
              if ($(window).width() > 1240 && $(window).height() > 650) {
                window.saws.mainslider.initialize();
              }
            }
            if ($(".conditions-swiper").length) {
              if ($(window).width() > 1023) {
                window.saws.conditionslider.initialize();
              }
            }
            if ($(".steps-swiper").length) {
              if ($(window).width() > 1023) {
                window.saws.stepslider.initialize();
              }
            }
          })
          .trigger("resize");
      },
    }.init();

    window.saws.numbers = {
      init: function () {
        $(".js-numbers").each(function () {
          if ($(this).hasClass("complete")) {
            return;
          }
          $(this).addClass("complete");
          $(this)
            .find("[data-number]")
            .each(function () {
              var th = $(this),
                numb = $(this).data("number"),
                speed = $(this).data("speed");
              th.prop("number", th.text()).animateNumber(
                {
                  number: numb,
                  numberStep: function (now, tween) {
                    var formatted = now
                      .toFixed()
                      .replace(/(\d)(?=(\d\d\d)+([^\d]|$))/g, "$1 ");
                    $(tween.elem).text(formatted);
                  },
                },
                speed,
                "linear"
              );
            });
        });
      },
    };

    window.saws.mobileNumbersInit = {
      init: function () {
        $(window)
          .resize(function () {
            if ($(window).width() < 1240) {
              $(window).scroll(function () {
                if (
                  $(".fourth-screen").offset().top <=
                  $(window).scrollTop() + $(window).height()
                ) {
                  window.saws.numbers.init();
                }
              });
            }
          })
          .trigger("resize");
      },
    }.init();

    window.saws.burgerInit = {
      init: function () {
        $(window)
          .resize(function () {
            if ($(window).width() < 1240 && $(window).width() > 1023) {
              $(window).scroll(function () {
                if (
                  $(".third-screen").offset().top <=
                  $(window).scrollTop() + $(window).height()
                ) {
                  $(".burger").show();
                } else {
                  $(".nav.fixed").hide();
                  $(".burger").removeClass("is-active");
                  $(".burger").hide();
                }
              });
            }
          })
          .trigger("resize");
      },
    }.init();
  }
  window.saws.form = {
    init: function () {
      var _th = this;

      $(".feedback__input").keyup(function () {
        if ($(this).data("req") && $(this).hasClass("warning")) {
          switch ($(this).data("type")) {
            case "mobile":
              if ($.trim($(this).val()).length < 11) {
                $(this).addClass("warning");
                $(this).parent().find(".invalid-feedback").show();
              } else {
                $(this).removeClass("warning");
                $(this).parent().find(".invalid-feedback").hide();
              }
              break;
            case "email":
              var re =
                /^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i;
              if (!re.test($(this).val())) {
                $(this).addClass("warning");
                $(this).parent().find(".invalid-feedback").show();
              } else {
                $(this).removeClass("warning");
                $(this).parent().find(".invalid-feedback").hide();
              }
              break;

            default:
              if ($.trim($(this).val()) === "") {
                $(this).addClass("warning");
                $(this).parent().find(".invalid-feedback").show();
              } else {
                $(this).removeClass("warning");
                $(this).parent().find(".invalid-feedback").hide();
              }
              break;
          }
        }
      });

      $(".inputfile").change(function () {
        var numb = $(this)[0].files[0].size / 1024 / 1024;
        numb = numb.toFixed(2);

        if (numb > 2) {
          $(this).parent().parent().parent().find(".invalid-size").show();
          $(this).parent().parent().parent().find(".invalid-feedback").hide();
          var label = $(this).next();
          var removeBtn = $(this).next().next();
          $(this).val("");
          removeBtn.hide();
          label.text("Загрузить");
        } else {
          $(this).parent().parent().parent().find(".invalid-size").hide();
        }

        if ($(this).value === "") {
          $(this).addClass("warning");
          $(this).parent().parent().addClass("warning");
          $(this).parent().parent().parent().find(".invalid-feedback").show();
        } else {
          $(this).removeClass("warning");
          $(this).parent().parent().removeClass("warning");
          $(this).parent().parent().parent().find(".invalid-feedback").hide();
        }
      });

      $(".feedback__checkbox").change(function () {
        if ($(this).is(":checked")) {
          $(this).next().removeClass("warning");
        } else {
          $(this).next().addClass("warning");
        }
      });

      $(".ajax-form").submit(function (event) {
        event.preventDefault();
        var captcha = grecaptcha.getResponse(widgetId1);
        var captchaError = $(this).find(".feedback__captcha-danger");
        if (captcha.length == 0) {
          captchaError.text('Вы не прошли проверку "Я не робот"');
          captchaError.show();
        } else {
          captchaError.hide();
        }
        if (_th.checkForm($(this)) && captcha.length) {
          var data = new FormData(this);
          //  var data = $(this).serialize();
          //  var data = new FormData(this);

          var form = this;
          $.ajax({
            url: "assets/php/script.php",
            data: data,
            type: "POST",
            cache: false,
            contentType: false,
            cache: false,
            processData: false,
          }).done(function (data) {
            $.fancybox.open({
              src: "#success",
            });
            $(form)[0].reset();
            grecaptcha.reset();
            console.log("success!");
          });
        }
      });

      $(".ajax-form1").submit(function (event) {
        event.preventDefault();
        var captcha = grecaptcha.getResponse(widgetId2);
        var captchaError = $(this).find(".feedback__captcha-danger");
        if (captcha.length == 0) {
          captchaError.text('Вы не прошли проверку "Я не робот"');
          captchaError.show();
        } else {
          captchaError.hide();
        }
        if (_th.checkForm($(this)) && captcha.length) {
          var data = new FormData(this);
          //  var data = $(this).serialize();
          //  var data = new FormData(this);
          var form = this;
          $.ajax({
            url: "assets/php/script-message.php",
            data: data,
            type: "POST",
            cache: false,
            contentType: false,
            cache: false,
            processData: false,
          }).done(function (data) {
            $.fancybox.open({
              src: "#success",
            });
            $(form)[0].reset();
            grecaptcha.reset();
            console.log("success!");
          });
        }
      });

      $(".ajax-form3").submit(function (event) {
        event.preventDefault();
        var captcha = grecaptcha.getResponse(widgetId1);
        var captchaError = $(this).find(".feedback__captcha-danger");
        if (captcha.length == 0) {
          captchaError.text('Вы не прошли проверку "Я не робот"');
          captchaError.show();
        } else {
          captchaError.hide();
        }

        if (_th.checkForm($(this))) {
          var data = new FormData(this);
          //  var data = $(this).serialize();
          //  var data = new FormData(this);
          var form = this;

          $.ajax({
            url: "assets/php/script-form.php",
            data: data,
            type: "POST",
            cache: false,
            contentType: false,
            cache: false,
            processData: false,
            beforeSend: function () {
              $.fancybox.open({
                src: "#loading",
              });
            },
          }).done(function (data) {
            $.fancybox.close();
            $.fancybox.open({
              src: "#success",
            });
            $(form)[0].reset();
            grecaptcha.reset();
            console.log("success!");
          });
        }
      });
    },

    checkForm: function (form) {
      var checkResult = true;
      form.find(".warning").removeClass("warning");
      form.find(".invalid-feedback").hide();
      form.find("input, textarea, select").each(function () {
        if ($(this).data("req")) {
          switch ($(this).data("type")) {
            case "checkbox":
              if (!$(this).is(":checked")) {
                $(this).siblings("label").addClass("warning");
                checkResult = false;
              }
              break;
            case "mobile":
              if ($.trim($(this).val()).length < 11) {
                $(this).addClass("warning");
                $(this).parent().find(".invalid-feedback").show();
                checkResult = false;
              }
              break;
            case "email":
              var re =
                /^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i;
              if (!re.test($(this).val())) {
                $(this).addClass("warning");
                $(this).parent().find(".invalid-feedback").show();
                checkResult = false;
              }
              break;
            case "file":
              if (!$(this).data("img")) {
                var val = $(this).val().toLowerCase(),
                  regex = new RegExp("(.*?).(pdf)$");
                if (!regex.test(val)) {
                  $(this).val("");
                  if ($("#file-name")) $("#file-name").hide();
                  var btn = $(this).next().next();
                  var label = $(this).next();
                  btn.hide();

                  label.text("Загрузить");

                  $(this).addClass("warning");
                  $(this).parent().parent().addClass("warning");
                  $(this)
                    .parent()
                    .parent()
                    .parent()
                    .find(".invalid-feedback")
                    .show();
                  checkResult = false;
                }
              } else {
                var val = $(this).val().toLowerCase(),
                  regex = new RegExp("(.*?).(jpg|jpeg)$");
                if (!regex.test(val)) {
                  $(this).val("");
                  var btn = $(this).next().next();
                  var label = $(this).next();
                  btn.hide();
                  if ($(".feedback__preview"))
                    $(".feedback__preview").removeClass("ready");
                  label.text("Загрузить");

                  $(this).addClass("warning");
                  $(this).parent().parent().addClass("warning");
                  $(this)
                    .parent()
                    .parent()
                    .parent()
                    .find(".invalid-feedback")
                    .show();

                  checkResult = false;
                }
              }

              if ($.trim($(this).val()) === "") {
                $(this).addClass("warning");
                $(this).parent().parent().addClass("warning");
                $(this)
                  .parent()
                  .parent()
                  .parent()
                  .find(".invalid-feedback")
                  .show();
                checkResult = false;
              }

              break;
            case "select":
              if (!$(this).parent().hasClass("changed")) {
                $(this).parent().addClass("warning");
                checkResult = false;
              }
              break;
            default:
              if ($.trim($(this).val()) === "") {
                $(this).addClass("warning");
                $(this).parent().find(".invalid-feedback").show();
                checkResult = false;
              }
              break;
          }
        } else {
          if ($(this).data("type") === "file") {
            if ($.trim($(this).val()) != "") {
              if (!$(this).data("img")) {
                var val = $(this).val().toLowerCase(),
                  regex = new RegExp("(.*?).(pdf)$");
                if (!regex.test(val)) {
                  $(this).val("");
                  $("#file-name").hide();
                  var btn = $(this).next().next();
                  var label = $(this).next();
                  btn.hide();

                  label.text("Загрузить");

                  // $(this).addClass('warning');
                  // $(this).parent().parent().addClass('warning');
                  $(this)
                    .parent()
                    .parent()
                    .parent()
                    .find(".invalid-feedback")
                    .show();
                  checkResult = false;
                }
              } else {
                var val = $(this).val().toLowerCase(),
                  regex = new RegExp("(.*?).(jpg|jpeg)$");
                if (!regex.test(val)) {
                  $(this).val("");
                  var btn = $(this).next().next();
                  var label = $(this).next();
                  btn.hide();

                  label.text("Загрузить");

                  // $(this).addClass('warning');
                  // $(this).parent().parent().addClass('warning');
                  $(this)
                    .parent()
                    .parent()
                    .parent()
                    .find(".invalid-feedback")
                    .show();
                }
              }
            }
          }
        }
      });
      return checkResult;
    },
  }.init();

  $(".burger").click(function () {
    $(this).toggleClass("is-active");
    $(".nav.fixed").toggle();
  });

  $(".third-screen .swiper-button-next").click(function () {
    if ($(this).hasClass("animate")) {
      $(this).removeClass("animate");
    }
  });
  $(".nav.fixed a").click(function () {
    if ($(window).width() < 650) {
      $(".nav.fixed").hide();
      $(".burger").removeClass("is-active");
    }
  });
  $(".questions__item").click(function () {
    $(".questions .scrollbtn").hide();
    $(".questions__item").removeClass("active");
    $(".questions__item").css("border-bottom-color", "#c3c3c3");
    $(this).toggleClass("active");
    $(".questions__item.active").css("border-bottom-color", "#ee394e");
    $(".questions__item.active")
      .prev()
      .css("border-bottom-color", "transparent");
    $(".questions__item-text").removeClass("opened");
    $(this).children(".questions__item-text").toggleClass("opened");
  });

  $(".nav__link").click(function (e) {
    event.preventDefault();
    var elementClick = $(this).attr("href").substr(1);
    if ($(elementClick).offset()) {
      var destination = $(elementClick).offset().top;
      $("html, body").animate(
        {
          scrollTop: destination - 50,
        },
        1500
      );
    }
  });

  $(".feedback__info-sign").click(function () {
    $(".feedback__tooltip").addClass("feedback__tooltip--fixed");
    setTimeout(function () {
      $(".feedback__tooltip").removeClass("feedback__tooltip--fixed");
    }, 1500);
  });

  $(".block-bottom__close").click(function (e) {
    $(".block-bottom").hide();
  });

  // $("#file-remove").click(function(e) {
  //   $(this).hide();
  //   var cert = $("#file-input");
  //   var label = cert.next();
  //   if(cert){
  //     cert.val("");
  //     document.querySelector('#file-name').innerHTML = "";
  //     label.text("Загрузить");
  //     cert.addClass('warning');
  //     cert.parent().parent().addClass('warning');
  //     cert.parent().parent().parent().find('.invalid-feedback').show();
  //   }
  // });

  $(".removefile").click(function (e) {
    // var btns = document.querySelectorAll('.removefile');
    if ($(this).parent().hasClass("img")) {
      if ($(".feedback__preview")) $(".feedback__preview").removeClass("ready");
    }

    $(this).hide();
    var label = $(this).prev();
    var input = $(this).prev().prev();
    input.val("");
    label.text("Загрузить");
    if (input.data("req")) {
      input.addClass("warning");
      input.parent().parent().addClass("warning");
      input.parent().parent().parent().children(".invalid-feedback").show();
    }
    // Array.prototype.forEach.call(btns, function(btn){
    //   var label	 = btn.previousElementSibling;
    //   var input = btn.previousElementSibling.previousElementSibling;
    //   btn.style.display="none";
    //   if(input){
    //     input.value=null;
    //     label.innerHTML = "Загрузить";
    //     input.classList.add("warning");
    //     input.parentNode.parentNode.classList.add("warning");
    //     input.parentNode.parentNode.parentNode.querySelector('.invalid-feedback').style.display = "block";
    //   }
    // })
  });

  $(".inputfile").click(function (e) {
    var inputs = document.querySelectorAll(".inputfile");
    Array.prototype.forEach.call(inputs, function (input) {
      var label = input.nextElementSibling,
        labelVal = label.innerHTML;

      input.addEventListener("change", function (e) {
        var fileName = "";

        fileName = e.target.value.split("\\").pop();

        if (fileName) {
          if (input.classList.contains("warning")) {
            input.classList.remove("warning");
          }

          if (document.querySelector("#file-name")) {
            document.querySelector("#file-name").innerHTML = fileName;
          }

          // $('#file-remove').show();
          input.nextElementSibling.nextElementSibling.style.display = "block";
          label.innerHTML = "Изменить";
        } else label.innerHTML = labelVal;
      });
    });
  });

  function demoUpload() {
    var $uploadCrop;

    function readFile(input) {
      if (input.files && input.files[0]) {
        var reader = new FileReader();

        reader.onload = function (e) {
          $(".feedback__preview").addClass("ready");
          $(".upload-result").removeClass("ready");
          $uploadCrop
            .croppie("bind", {
              url: e.target.result,
            })
            .then(function () {
              console.log("jQuery bind complete");
            });
        };

        reader.readAsDataURL(input.files[0]);
      } else {
        swal("Sorry - you're browser doesn't support the FileReader API");
      }
    }

    // if($(window).width() < 1024){
    $uploadCrop = $("#img-preview").croppie({
      viewport: {
        width: 132,
        height: 170,
      },
    });
    // }
    // else{
    //   $uploadCrop = $('#img-preview').croppie({
    //     viewport: {
    //       width: 170,
    //       height: 132
    //     },
    //     enableExif: true
    //   });
    // }

    // var wH = $(window).height();
    // var wW = $(window).width();

    // $uploadCrop = $('#img-preview').croppie({
    //   viewport: { width: wW / 2, height: wH  / 2},
    //   boundary: {width: wW, height: wH }
    // });

    $("#file-input1").change(function () {
      readFile(this);
    });

    $(".upload-result").on("click", function (ev) {
      $(this).addClass("ready");
      setTimeout(function () {
        $(".feedback__preview").removeClass("ready");
      });

      $uploadCrop
        .croppie("result", {
          type: "canvas",
          size: "viewport",
          format: "jpeg",
          quality: 0.99,
        })
        .then(function (resp) {
          if (resp) $(".feedback__photo-path").val(resp);
        });
    });
  }

  demoUpload();

  document.querySelectorAll(".feedback__input").forEach(function (e) {
    e.addEventListener("focus", function () {
      this.classList.add("not-empty"),
        this.addEventListener("focusout", function (e) {
          "" == this.value && this.classList.remove("not-empty");
        });
    });
  });

  var listCountries = $.masksSort(
    $.masksLoad("assets/data/phone-codes.json"),
    ["#"],
    /[0-9]|#/,
    "mask"
  );
  var listRU = $.masksSort(
    $.masksLoad("assets/data/phones-ru.json"),
    ["#"],
    /[0-9]|#/,
    "mask"
  );
  var maskOpts = {
    inputmask: {
      definitions: {
        "#": {
          validator: "[0-9]",
          cardinality: 1,
        },
      },
      showMaskOnHover: false,
      autoUnmask: true,
      clearMaskOnLostFocus: false,
    },
    match: /[0-9]/,
    replace: "#",
    listKey: "mask",
  };

  var maskChangeWorld = function (maskObj, determined) {
    if (determined) {
      var hint = maskObj.name_ru;
      if (maskObj.desc_ru && maskObj.desc_ru != "") {
        hint += " (" + maskObj.desc_ru + ")";
      }

      $(this).parent().find(".js-phone-descr").html(hint);
    } else {
      $(this).parent().find(".js-phone-descr").html("");
    }
  };

  var maskChangeRU = function (maskObj, determined) {
    if (determined) {
      if (maskObj.type != "mobile") {
        $(this)
          .parent()
          .find(".js-phone-descr")
          .html(
            maskObj.city.toString() + " (" + maskObj.region.toString() + ")"
          );
      } else {
        $(this).parent().find(".js-phone-descr").html("мобильные");
      }
    } else {
      $(this).parent().find(".js-phone-descr").html("");
    }
  };

  $(".js-phone").on("keyup", function () {
    $(".js-phone").addClass("always-not-empty");
    $(".js-phone").inputmask("remove");
    $(".js-phone").inputmasks(
      $.extend(true, {}, maskOpts, {
        list: listCountries,
        onMaskChange: maskChangeWorld,
      })
    );
  });
});
